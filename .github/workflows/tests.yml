name: tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build_linux:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: ubuntu-latest
            target: x86_64
          - runner: ubuntu-latest
            target: x86
          # - runner: ubuntu-latest
          #   target: aarch64
          # - runner: ubuntu-latest
          #   target: armv7
          # - runner: ubuntu-latest
          #   target: s390x
          - runner: ubuntu-latest
            target: ppc64le
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter
          sccache: 'true'
          manylinux: auto
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.platform.target }}
          path: dist

  test_linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9, "3.10"]
    steps:
    - name: Check out repository code
      uses: actions/checkout@v4
      with:
        submodules: recursive      
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m venv .env
        source .env/bin/activate
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        maturin develop --release
    - name: Run tests
      run: |
        source .env/bin/activate
        ./tests.sh

  test_macos:
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, "3.10"]
    steps:
    - name: Check out repository code
      uses: actions/checkout@v4      
      with:
        submodules: recursive      
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m venv .env
        source .env/bin/activate
        pip install -r requirements.txt
        maturin develop --release
    - name: Run tests
      run: |
        source .env/bin/activate
        ./tests.sh

  test_windows:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9, "3.10"]
    steps:
    - name: Check out repository code
      uses: actions/checkout@v4
      with:
        submodules: recursive
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m venv .env
        .env\Scripts\activate
        pip install -r requirements.txt
        maturin develop --release
    - name: Run tests
      run: |
        .env\Scripts\activate
        pytest
        python examples/encrypt.py
        python examples/encrypt_from.py
        python examples/encrypt_file.py
        python benches/bench.py
